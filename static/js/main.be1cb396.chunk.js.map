{"version":3,"sources":["App.js","components/isLoginMetaMask.js","components/isMetaMask.js","components/isDesiredNetwork.js","components/Login.js","MyComponent.js","serviceWorker.js","index.js","Ropsten.png"],"names":["isMobile","isLoginMetaMask","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","isMetaMask","isDesiredNetwork","_this","state","image","clicked","description","handleClick","bind","assertThisInitialized","e","preventDefault","setState","src","height","width","alt","_this2","Button_default","onClick","Login","MyComponent","components","b","c","d","TagName","tag","detect","require","page","window","location","host","MetaMaskLoginButton","context","handleShow","handleClose","network","mount","boarding","init","show","install","isRedirect","isLogin","web3","ethereum","on","accounts","_this3","countone","sessionStorage","getItem","close","console","log","setInterval","count","eth","setItem","reload","promise1","Promise","resolve","reject","open","setTimeout","browser","navigator","userAgent","match","name","enable","length","_this4","_this5","networkVersion","content","src_MyComponent","react","Fragment","index_es","mb","Modal_default","onHide","Header","closeButton","Title","Body","Footer","variant","Boolean","hostname","ReactDOM","render","App","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.be1cb396.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { MetaMaskButton } from \"rimble-ui\";\r\nimport Web3 from \"web3\";\r\nimport MyComponent from \"./MyComponent\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nvar detect = require(\"detect-browser\").detect;\r\n\r\nvar isMobile;\r\nvar page = window.location.host;\r\n\r\nclass MetaMaskLoginButton extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.network = this.network.bind(this);\r\n    this.mount = this.mount.bind(this);\r\n    this.boarding = this.boarding.bind(this);\r\n    this.init = this.init.bind(this);\r\n    \r\n\r\n    this.state = {\r\n      show: false,\r\n      install: false,\r\n      isMetaMask: false,\r\n      isRedirect: false,\r\n      isLoginMetaMask: false,\r\n      isDesiredNetwork: false,\r\n      isLogin: false\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    if (typeof web3 !== \"undefined\") {\r\n      this.state.install = false;\r\n      window.ethereum.on(\"networkChanged\", accounts => {\r\n        if (accounts === \"3\") {\r\n          this.setState({\r\n            isLogin: true,\r\n            isDesiredNetwork: false,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLogin: false,\r\n            isDesiredNetwork: true,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.state.install = true;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n    var countone = window.sessionStorage.getItem(\"countone\");\r\n    var close = window.sessionStorage.getItem(\"close\");\r\n    if(countone ==='1' && close==='0'){\r\n      console.log('hello')\r\n      this.setState({ show: true,isMetaMask: true});\r\n    \r\n  \r\n    console.log(this.state.show)\r\n   \r\n      setInterval(() => {\r\n        var count = window.sessionStorage.getItem(\"count\");\r\n        console.log(count);\r\n        if (typeof web3 !== \"undefined\") {\r\n          if (window.web3.eth.accounts[0]) {\r\n            if (count !== \"1\") {\r\n                sessionStorage.setItem(\"count\", 1);\r\n            sessionStorage.setItem(\"countone\", 0);\r\n            this.boarding()\r\n            }\r\n          \r\n          }\r\n        } else {\r\n          window.location.reload();\r\n        }\r\n      }, 5000);\r\n    }\r\n   \r\n   \r\n  }\r\n\r\n async boarding(){\r\n  var promise1 = new Promise(function(resolve, reject) {\r\n    window.open(\"http://fwd.metamask.io/\");\r\n    setTimeout(function() {\r\n     \r\n      window.open(\"http://\"+page+'/');\r\n    }, 10000);\r\n    resolve(\"done!\")\r\n  });\r\n   \r\n   var wait = await promise1\r\n   \r\n   \r\n  \r\n    \r\n  }\r\n\r\n  mount() {\r\n    if (typeof web3 !== \"undefined\") {\r\n      this.setState({ isMetaMask: false });\r\n      this.init();\r\n    } else {\r\n      sessionStorage.setItem(\"countone\", 1);\r\n      const browser = detect();\r\n\r\n      isMobile = !!detectMobile();\r\n\r\n      function detectMobile() {\r\n        return (\r\n          navigator.userAgent.match(/Android/i) ||\r\n          navigator.userAgent.match(/webOS/i) ||\r\n          navigator.userAgent.match(/iPhone/i) ||\r\n          navigator.userAgent.match(/iPad/i) ||\r\n          navigator.userAgent.match(/iPod/i) ||\r\n          navigator.userAgent.match(/BlackBerry/i) ||\r\n          navigator.userAgent.match(/Windows Phone/i)\r\n        );\r\n      }\r\n      if (!isMobile) {\r\n        switch (browser.name) {\r\n          case \"firefox\":\r\n            window.open(\r\n              \"https://addons.mozilla.org/en-US/firefox/addon/ether-metamask/\",\r\n              \"_blank\"\r\n            );\r\n\r\n            break;\r\n\r\n          case \"chrome\":\r\n            window.open(\r\n              \"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\",\r\n              \"_blank\"\r\n            );\r\n\r\n          case \"opera\":\r\n            window.open(\r\n              \"https://addons.opera.com/en/extensions/details/metamask/\",\r\n              \"_blank\"\r\n            );\r\n\r\n            break;\r\n        }\r\n      }\r\n\r\n      window.location.reload()\r\n\r\n      this.setState({ isMetaMask: true });\r\n    }\r\n  }\r\n\r\n \r\n\r\n  async init() {\r\n    try {\r\n      const accounts = await window.ethereum.enable();\r\n      this.setState({\r\n        isDesiredNetwork: true,\r\n        isMetaMask: false\r\n      });\r\n      this.network();\r\n    } catch (error) {\r\n      this.setState({ isLoginMetaMask: true, isMetaMask: false });\r\n    }\r\n    window.ethereum.on(\"accountsChanged\", accounts => {\r\n      if (accounts.length === 1) {\r\n        this.setState({\r\n          isLoginMetaMask: true,\r\n          isMetaMask: false,\r\n          isDesiredNetwork: false,\r\n          isLogin: false\r\n        });\r\n        this.init();\r\n      } else {\r\n        this.setState({\r\n          isLoginMetaMask: false,\r\n          isMetaMask: false,\r\n          isDesiredNetwork: false,\r\n          isLogin: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  network() {\r\n    // If a web3 instance is already provided by Meta Mask.\r\n    if (window.ethereum.networkVersion === \"3\") {\r\n      this.setState({ isLogin: true });\r\n    } else {\r\n      window.ethereum.on(\"networkChanged\", accounts => {\r\n        if (accounts === \"3\") {\r\n          this.setState({\r\n            isLogin: true,\r\n            isDesiredNetwork: false,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isLogin: false,\r\n            isDesiredNetwork: true,\r\n            isMetaMask: false,\r\n            isLoginMetaMask: false\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    sessionStorage.setItem(\"close\", 1);\r\n    this.setState({ show: false });\r\n  }\r\n\r\n  handleShow() {\r\n    sessionStorage.setItem(\"close\", 0);\r\n    this.setState({ show: true });\r\n    this.mount();\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    if (this.state.isMetaMask) {\r\n      content = <MyComponent tag=\"a\" />;\r\n    }\r\n    if (this.state.isLoginMetaMask) {\r\n      content = <MyComponent tag=\"b\" />;\r\n    }\r\n    if (this.state.isDesiredNetwork) {\r\n      content = <MyComponent tag=\"c\" />;\r\n    }\r\n    if (this.state.isLogin) {\r\n      content = <MyComponent tag=\"d\" />;\r\n    }\r\n    if (isMobile) {\r\n      content = <Fragment>Mobile coming soon!</Fragment>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <MetaMaskButton mb={3} onClick={this.handleShow}>\r\n          {this.state.install ? \"Install MetaMask\" : \"Connect with MetaMask\"}\r\n        </MetaMaskButton>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Lets Start!</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>{content}</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Done!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaMaskLoginButton;\r\n","import React, { Component } from 'react';\n\n\n\nexport default class isLoginMetaMask extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div>\n                <p>Login into MetaMask\n            <br />\n                </p>\n            </div>\n\n        )\n    }\n}","import React, { Component } from 'react';\n\n\n\n\nexport default class isMetaMask extends Component{\n    \n    constructor(props){\n        super(props);\n\n    }\n    render(){\n        return(\n            <div>\n                <p>Install MetaMask to Sign in\n                \n                </p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport image from '../Ropsten.png'\nimport Web3 from 'web3';\n\n\nexport default class isDesiredNetwork extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            image: '',\n            clicked: true,\n            description: ''\n        }\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.setState({ clicked: !this.state.clicked })\n        if (this.state.clicked) {\n            this.state.image = <img src={image} height=\"300\" width=\"450 \" alt=\"fireSpot\" />\n            this.state.description = 'Go to the network\\'s dropdown and Select Ropsten network'\n        }\n        else {\n            this.state.image = ''\n            this.state.description = ''\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={(e) => this.handleClick(e)}> Connect To Ropsten Network</Button>\n                <br />\n                {this.state.image}\n                <br />\n                {this.state.description}\n            </div>\n\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Web3 from \"web3\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        Signed in with MetaMask\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport isLoginMetaMask from './components/isLoginMetaMask';\nimport isMetaMask from './components/isMetaMask'\nimport  isDesiredNetwork  from './components/isDesiredNetwork'\nimport Login from './components/Login'\n\nclass MyComponent extends Component {\n    components = {\n        b: isLoginMetaMask,\n        a:isMetaMask,\n        c:isDesiredNetwork,\n        d:Login\n    };\n    render() {\n       const TagName = this.components[this.props.tag || 'a'];\n       return <TagName />\n    }\n}\nexport default MyComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport MetaMaskLoginButton from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MetaMaskLoginButton />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Ropsten.7a313811.png\";"],"sourceRoot":""}